import gradio as gr
from huggingface_hub import hf_hub_download
from llama_cpp import Llama # Note that since the model is trained on the GPU,
# we need this step




# Load the model into the CPU
model_path = hf_hub_download(repo_id="sennadir/lora_model/", filename="model_cpu.gguf")
llm = Llama(model_path=model_path,
            n_ctx=2048,
            n_threads=8)

def chat_with_model(user_input, chat_history):
    """
    Process user input and generate a response from the model.
    :param user_input: User's input string
    :param chat_history: List of [user_message, ai_response] pairs
    :return: Updated chat history
    """
    # Construct the prompt from chat history
    prompt = ""
    for user, ai in chat_history:
        prompt += f"User: {user}\nAI: {ai}\n"
    prompt += f"User: {user_input}\nAI:"  # Add the latest user input

    # Generate response from the model
    raw_response = llm(prompt)["choices"][0]["text"].strip()

    # Clean the response (remove extra tags, if any)
    response = raw_response.split("User:")[0].strip()

    # Update chat history with the new turn
    chat_history.append((user_input, response))
    return chat_history, chat_history


# This was generated by ChatGPT -- All credit go to that

# Gradio UI
with gr.Blocks() as demo:
    # Title
    gr.Markdown("# Sofiane's Personal ChatPlot")

    # Chatbot display
    chatbot = gr.Chatbot(label="Chat with Sofiane's AI")

    with gr.Row():
        # User input column
        with gr.Column(scale=4):
            user_input = gr.Textbox(
                label="Your Message",
                placeholder="Type your question or message here..."
            )
        # Submit button column
        with gr.Column(scale=1):
            submit_btn = gr.Button("Send", variant="primary")

    # State to store chat history
    chat_history = gr.State([])

    # Link components with a callback
    submit_btn.click(
        fn=chat_with_model,                # Callback function
        inputs=[user_input, chat_history], # Inputs for the function
        outputs=[chatbot, chat_history],   # Outputs of the function
        show_progress=True,                # Display progress indicator
    )

# Launch the Gradio app
demo.launch()
